name: Deploy Docker Image

on:
  push: 
    branches:
      - deploy  # deploy 브랜치에 푸시될 때 트리거

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. node_modules 캐시 설정 (필요할 경우)
      - name: Cache yarn
        uses: actions/cache@v4.1.2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 3. Docker Hub에 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Docker 이미지 빌드 및 푸시
      - name: Build Docker image
        run: |
          docker build --cache-from=type=local,src=/tmp/.buildx-cache \
          --build-arg VITE_SUPABASE_SERVICE_KEY=${{ secrets.VITE_SUPABASE_SERVICE_KEY }} \
          --build-arg VITE_KAKAOMAP_KEY=${{ secrets.VITE_KAKAOMAP_KEY }} \
          --build-arg VITE_VISITJEJU_KEY=${{ secrets.VITE_VISITJEJU_KEY }} \
          --build-arg VITE_VISIT_JEJU_BASE_URL=${{ secrets.VITE_VISIT_JEJU_BASE_URL }} \
          --build-arg VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }} \
          --build-arg VITE_SUPABASE_BASE_URL=${{ secrets.VITE_SUPABASE_BASE_URL }} \
          -t ${{ secrets.DOCKER_USERNAME }}/jejumonth_fe:v1 .

      - name: Push Docker image
        run: |
          docker push "${{ secrets.DOCKER_USERNAME }}/jejumonth_fe:v1"
